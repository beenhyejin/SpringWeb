<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns="http://www.springframework.org/schema/security" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
                  http://www.springframework.org/schema/beans/spring-beans.xsd
                  http://www.springframework.org/schema/security
                  http://www.springframework.org/schema/security/spring-security.xsd">


	<http auto-config="true">
		<intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN') or hasRole('ROLE_USER')" />
		<intercept-url pattern="/student/**" access="hasRole('ROLE_STUDENT')" />
		<intercept-url pattern="/teacher/**" access="hasRole('ROLE_TEACHER')" />
		<intercept-url pattern = "/customer/**" access= "hasRole('ROLE_USER')"/>

		<form-login login-page="/member/login" default-target-url="/index" />
		<logout logout-success-url="/index"/>
	</http>
	<authentication-manager>
		<authentication-provider>
			<!-- 1. DB를 이용해 보도록 합시다! -->
			<jdbc-user-service data-source-ref="dataSource" 
								users-by-username-query="select `id`, pwd `password`, 1 endabled from Member where id = ?" 
								authorities-by-username-query="select id, 'ROLE_USER' authority from Member where id=?"/>
			<!-- 2. inmemory -->
			<!-- <user-service>
				<user name="newlec" password="111" authorities="ROLE_USER, ROLE_ADMIN" />
				<user name="dragon" password="111" authorities="ROLE_USER" />
			</user-service> -->
			
		</authentication-provider>
	</authentication-manager>
</beans:beans>
